PrimeFaces.locales['en_US'] = {
	closeText: 'Tutup',
	prevText: 'Sebelumnya',
	nextText: 'Berikutnya',
	monthNames: ['Januari', 'Februari', 'Maret', 'April', 'Mei', 'Juni', 'Juli', 'Agustus', 'September', 'Oktober', 'November', 'Desember'],
	monthNamesShort: ['Jan', 'Feb', 'Mar', 'Apr', 'Mei', 'Jun', 'Jul', 'Ags', 'Sep', 'Okt', 'Nov', 'Des'],
	dayNames: ['Minggu', 'Senin', 'Selasa', 'Rabu', 'Kamis', 'Jumat', 'Sabtu'],
	dayNamesShort: ['Min', 'Sen', 'Sel', 'Rab', 'Kam', 'Jum', 'Sab'],
	dayNamesMin: ['M', 'S', 'S', 'R', 'K', 'J', 'S'],
	weekHeader: 'Minggu',
	firstDay: 1,
	isRTL: false,
	showMonthAfterYear: false,
	yearSuffix: '',
	timeOnlyTitle: 'Hanya Jam',
	timeText: 'Jam',
	hourText: 'Jam',
	minuteText: 'Menit',
	secondText: 'Detik',
	currentText: 'Tanggal Sekarang',
	ampm: true,
	month: 'Bulan',
	week: 'Minggu',
	day: 'Hari',
	allDayText: 'Semua Hari',
	dateFormat: 'dd-mm-yy',
	messages: {
		"javax.faces.component.UIInput.REQUIRED" : "{0}: Kesalahan Validasi: Harus diisi.",
		"javax.faces.converter.IntegerConverter.INTEGER" : "{2}: '{0}' harus sebuah angka yang terdiri atas satu atau lebih digit.",
		"javax.faces.converter.IntegerConverter.INTEGER_detail" : "{2}: '{0}' harus sebuah angka dari -2147483648 sampai 2147483647 Contoh: {1}",
		"javax.faces.converter.LongConverter.LONG" : "{2}: '{0}' harus sebuah angka yang terdiri atas satu atau lebih digit.",
		"javax.faces.converter.LongConverter.LONG_detail" : "{2}: '{0}' harus sebuah angka dari -9223372036854775808 sampai 9223372036854775807 Contoh: {1}",
		"javax.faces.converter.DoubleConverter.DOUBLE" : "{2}: '{0}' harus sebuah angka yang terdiri atas satu atau lebih digit.",
		"javax.faces.converter.DoubleConverter.DOUBLE_detail" : "{2}: '{0}' harus sebuah angka dari 4.9E-324 sampai 1.7976931348623157E308 Contoh: {1}",
		"javax.faces.converter.BigDecimalConverter.DECIMAL" : "{2}: '{0}' harus sebuah angka.",
		"javax.faces.converter.BigDecimalConverter.DECIMAL_detail" : "{2}: '{0}' harus sebuah angka yang terdiri atas satu atau lebih digit, diikuti oleh titik desimal dan bagian koma.  Contoh: {1}",
		"javax.faces.converter.BigIntegerConverter.BIGINTEGER" : "{2}: '{0}' harus sebuah angka yang terdiri atas satu atau lebih digit.",
		"javax.faces.converter.BigIntegerConverter.BIGINTEGER_detail" : "{2}: '{0}' harus sebuah angka yang terdiri atas satu atau lebih digit. Contoh: {1}",
		"javax.faces.converter.ByteConverter.BYTE" : "{2}: '{0}' harus sebuah angka dari 0 sampai 255.",
		"javax.faces.converter.ByteConverter.BYTE_detail" : "{2}: '{0}' harus sebuah angka dari 0 sampai 255.  Contoh: {1}",
		"javax.faces.converter.CharacterConverter.CHARACTER" : "{1}: '{0}' harus sebuah karakter yang valid.",
		"javax.faces.converter.CharacterConverter.CHARACTER_detail" : "{1}: '{0}' harus sebuah karakter ASCII yang valid.",
		"javax.faces.converter.ShortConverter.SHORT" : "{2}: '{0}' harus sebuah angka yang terdiri atas satu atau lebih digit.",
		"javax.faces.converter.ShortConverter.SHORT_detail" : "{2}: '{0}' harus sebuah angka dari -32768 sampai 32767 Contoh: {1}",
		"javax.faces.converter.BooleanConverter.BOOLEAN" : "{1}: '{0}' harus 'true' atau 'false'",
		"javax.faces.converter.BooleanConverter.BOOLEAN_detail" : "{1}: '{0}' harus 'true' atau 'false'.  Nilai selain 'true'akan dianggap 'false'.",
		"javax.faces.validator.LongRangeValidator.MAXIMUM" : "{1}: Kesalahan Validasi: Nilai maksimum yang diperbolehkan adalah '{0}'",
		"javax.faces.validator.LongRangeValidator.MINIMUM" : "{1}: Kesalahan Validasi: Nilai minimum yang diperbolehkan adalah '{0}'",
		"javax.faces.validator.LongRangeValidator.NOT_IN_RANGE" : "{2}: Kesalahan Validasi: Nilai tidak berada diantara {0} dan {1}.",
		"javax.faces.validator.LongRangeValidator.TYPE={0}" : "Kesalahan Validasi: Nilai bukan tipe yang tepat.",
		"javax.faces.validator.DoubleRangeValidator.MAXIMUM" : "{1}: Kesalahan Validasi: Nilai maksimum yang diperbolehkan adalah '{0}'",
		"javax.faces.validator.DoubleRangeValidator.MINIMUM" : "{1}: Kesalahan Validasi: Nilai minimum yang diperbolehkan adalah '{0}'",
		"javax.faces.validator.DoubleRangeValidator.NOT_IN_RANGE" : "{2}: Kesalahan Validasi: Nilai tidak berada diantara {0} dan {1}",
		"javax.faces.validator.DoubleRangeValidator.TYPE={0}" : "Kesalahan Validasi: Nilai tidak memiliki tipe yang tepat",
		"javax.faces.converter.FloatConverter.FLOAT" : "{2}: '{0}' harus sebuah angka yang terdiri atas satu atau lebih digit.",
		"javax.faces.converter.FloatConverter.FLOAT_detail" : "{2}: '{0}' harus sebuah angka dari 1.4E-45 sampai 3.4028235E38  Contoh: {1}",
		"javax.faces.converter.DateTimeConverter.DATE" : "{2}: '{0}' tidak dapat diterjemahkan menjadi tanggal.",
		"javax.faces.converter.DateTimeConverter.DATE_detail" : "{2}: '{0}' tidak dapat diterjemahkan menjadi tanggal. Contoh: {1}",
		"javax.faces.converter.DateTimeConverter.TIME" : "{2}: '{0}' tidak dapat diterjemahkan menjadi jam.",
		"javax.faces.converter.DateTimeConverter.TIME_detail" : "{2}: '{0}' tidak dapat diterjemahkan menjadi jam. Contoh: {1}",
		"javax.faces.converter.DateTimeConverter.DATETIME" : "{2}: '{0}' tidak dapat diterjemahkan menjadi tanggal dan jam.",
		"javax.faces.converter.DateTimeConverter.DATETIME_detail" : "{2}: '{0}' tidak dapat diterjemahkan menjadi tanggal dan jam. Contoh: {1}",
		"javax.faces.converter.DateTimeConverter.PATTERN_TYPE" : "{1}: Sebuah atribut 'pattern' atau 'type' dibutuhkan untuk menerjemahkan nilai '{0}'",
		"javax.faces.converter.NumberConverter.CURRENCY" : "{2}: '{0}' tidak dapat diterjemahkan menjadi mata uang.",
		"javax.faces.converter.NumberConverter.CURRENCY_detail" : "{2}: '{0}' tidak dapat diterjemahkan menjadi mata uang. Contoh: {1}",
		"javax.faces.converter.NumberConverter.PERCENT" : "{2}: '{0}' tidak dapat diterjemahkan menjadi persentase.",
		"javax.faces.converter.NumberConverter.PERCENT_detail" : "{2}: '{0}' tidak dapat diterjemahkan menjadi persentase. Contoh: {1}",
		"javax.faces.converter.NumberConverter.NUMBER" : "{2}: '{0}' bukan sebuah angka.",
		"javax.faces.converter.NumberConverter.NUMBER_detail" : "{2}: '{0}' bukan sebuah angka. Contoh: {1}",
		"javax.faces.converter.NumberConverter.PATTERN" : "{2}: '{0}' bukan sebuah pola angka.",
		"javax.faces.converter.NumberConverter.PATTERN_detail" : "{2}: '{0}' bukan sebuah pola angka. Contoh: {1}",
		"javax.faces.validator.LengthValidator.MINIMUM" : "{1}: Kesalahan Validasi: Panjang karakter minimum yang diperbolehkan adalah '{0}'",
		"javax.faces.validator.LengthValidator.MAXIMUM" : "{1}: Kesalahan Validasi: Panjang karakter maksimum yang diperbolehkan adalah '{0}'",
		"javax.faces.validator.RegexValidator.PATTERN_NOT_SET" : "Pola regex harus diberikan.",
		"javax.faces.validator.RegexValidator.PATTERN_NOT_SET_detail" : "Pola regek harus diberikan pada nilai yang tidak kosong.",
		"javax.faces.validator.RegexValidator.NOT_MATCHED" : "Tidak cocok dengan pola regex",
		"javax.faces.validator.RegexValidator.NOT_MATCHED_detail" : "Tidak cocok dengan pola regex '{0}'",
		"javax.faces.validator.RegexValidator.MATCH_EXCEPTION" : "Kesalahan pada regex.",
		"javax.faces.validator.RegexValidator.MATCH_EXCEPTION_detail" : "Kesalahan pada regex '{0}'",
		"javax.validation.constraints.AssertFalse.message": "harus false",
		"javax.validation.constraints.AssertTrue.message": "harus true",
		"javax.validation.constraints.DecimalMax.message": "harus kurang dari atau sama dengan  {0}",
		"javax.validation.constraints.DecimalMin.message": "harus lebih dari atau sama dengan {0}",
		"javax.validation.constraints.Digits.message": "angka diluar batas (<{0} digit>.<{1} koma>)",
		"javax.validation.constraints.Future.message": "harus di masa depan",
		"javax.validation.constraints.Max.message": "harus kurang dari atau sama dengan {0}",
		"javax.validation.constraints.Min.message": "harus lebih dari atau sama dengan {0}",
		"javax.validation.constraints.NotNull.message": "tidak boleh kosong",
		"javax.validation.constraints.Null.message": "harus kosong",
		"javax.validation.constraints.Past.message": "harus di masa lampau",
		"javax.validation.constraints.Pattern.message": "harus memenuhi '{0}'",
		"javax.validation.constraints.Size.message": "harus diantara {0} dan {1}",
		"org.hibernate.validator.constraints.CreditCardNumber.message": "nomor kartu kredit salah",
		"org.hibernate.validator.constraints.Email.message": "email salah",
		"org.hibernate.validator.constraints.Length.message": "panjang harus diantara {0} dan {1}",
		"org.hibernate.validator.constraints.NotBlank.message": "tidak boleh kosong",
		"org.hibernate.validator.constraints.NotEmpty.message": "tidak boleh kosong",
		"org.hibernate.validator.constraints.Range.message": "harus diantara {0} dan {1}",
		"org.hibernate.validator.constraints.SafeHtml.message": "mengandung HTML yang tidak aman",
		"org.hibernate.validator.constraints.ScriptAssert.message": "hasil evaluasi '{0}' tidak bernilai true",
		"org.hibernate.validator.constraints.URL.message": "harus berupa URL yang valid",
		"org.hibernate.validator.constraints.br.CNPJ.message": "invalid Brazilian corporate taxpayer registry number (CNPJ)",
		"org.hibernate.validator.constraints.br.CPF.message": "invalid Brazilian individual taxpayer registry number (CPF)",
		"org.hibernate.validator.constraints.br.TituloEleitor.message": "invalid Brazilian Voter ID card number",
		"javax.faces.validator.BeanValidator.MESSAGE": "{0}"
	}
}

$('#panelKota').bind('close', function(e, status) {
	 alert('test');
})